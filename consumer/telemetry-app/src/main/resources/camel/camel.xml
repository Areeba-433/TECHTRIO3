<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2020, 2022 Eurotech and/or its affiliates and others

    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
        Eurotech - initial API and implementation
 -->

<routes xmlns="http://camel.apache.org/schema/spring">
    <route errorHandlerRef="messageErrorHandler" id="telemetryRoute" >
        <from uri="amqp:topic://#?selector=KAPUA_MESSAGE_TYPE='TEL'&amp;asyncConsumer=true&amp;acknowledgementModeName=CLIENT_ACKNOWLEDGE&amp;subscriptionDurable=true&amp;subscriptionName=telemetryConsumers&amp;subscriptionShared=true&amp;transacted=false&amp;concurrentConsumers=2&amp;maxConcurrentConsumers=5"/>
        <!--  handling timeout and communication exceptions in a retry queue -->
        <pipeline>
            <!-- keep here the bind/unbind of the kapua session so we can avoid the null check in bind method of KapuaCamelFilter because the Artemis internal messages have no KapuaSession in their header -->
            <bean ref="kapuaCamelFilter" method="bindSession"/>
            <bean ref="kapuaDataConverter" method="convertToData"/>
            <to uri="bean:dataStorageMessageProcessor?method=processMessage"/>
            <bean ref="kapuaCamelFilter" method="unbindSession"/>
        </pipeline>
    </route>
    <route id="dlq">
        <from uri="amqp:queue:dlq?asyncConsumer=true&amp;acknowledgementModeName=CLIENT_ACKNOWLEDGE&amp;transacted=false&amp;concurrentConsumers=2&amp;maxConcurrentConsumers=5"/>
        <pipeline>
            <bean ref="kapuaCamelFilter" method="bindSession"/>
            <to uri="bean:errorMessageListener?method=processMessage"/>
            <bean ref="kapuaCamelFilter" method="unbindSession"/>
        </pipeline>
    </route>
</routes>